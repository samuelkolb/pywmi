def maink(){
    dd := uniform(0,1)+uniform(0,1);
    r := uniform(0,1) + gauss(dd,1);// + gauss(10,1);
    //r := Gauss(dd,1);
    return r; // expected: ((d/dx)⁻¹[e^(-x²)](-r·⅟√̅2+⅟√̅2)·3/2+(d/dx)⁻¹[e^(-x²)](-r·⅟√̅2+⅟√̅2+√̅2)·1/2+(d/dx)⁻¹[e^(-x²)](-⅟√̅2+-√̅2+r·⅟√̅2)·3·r+(d/dx)⁻¹[e^(-x²)](-⅟√̅2+r·⅟√̅2)·3·r+(d/dx)⁻¹[e^(-x²)](-√̅2+r·⅟√̅2)·3/2·r²+(d/dx)⁻¹[e^(-x²)](-√̅2+r·⅟√̅2)·6+(d/dx)⁻¹[e^(-x²)](r·⅟√̅2)·1/2·r²+-(d/dx)⁻¹[e^(-x²)](-r·⅟√̅2)·1/2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√̅2+√̅2)·3/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+-√̅2+r·⅟√̅2)·9/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+-√̅2+r·⅟√̅2)·r²·1/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+r·⅟√̅2)·3/2+-(d/dx)⁻¹[e^(-x²)](-⅟√̅2+r·⅟√̅2)·r²·3/2+-(d/dx)⁻¹[e^(-x²)](-√̅2+r·⅟√̅2)·r·6+-2^(3/2)·e^(-1/2·r²+-2+2·r)+-e^(-1/2+-1/2·r²+r)·r·√̅2+-e^(-1/2+-1/2·r²+r)·⅟√̅2+-e^(-1/2·r²+-2+2·r)·r·⅟2^(3/2)+-e^(-1/2·r²+-2+2·r)·⅟√̅2+-e^(-1/2·r²+-9/2+3·r)·r·⅟√̅2+-e^(-1/2·r²+-9/2+3·r)·⅟2^(3/2)+-r·⅟2^(3/2)·⅟e^(1/2·r²)+e^(-1/2+-1/2·r²+r)·r·⅟2^(3/2)+e^(-1/2+-1/2·r²+r)·⅟2^(3/2)+e^(-1/2+-1/2·r²+r)·√̅2+e^(-1/2·r²+-2+2·r)·r·√̅2+e^(-1/2·r²+-2+2·r)·√̅2+e^(-1/2·r²+-9/2+3·r)·r·⅟2^(3/2)+e^(-1/2·r²+-9/2+3·r)·√̅2+r·⅟e^(1/2·r²)·⅟√̅2)·⅟√̅π
    // TODO: evaluate normalization constant (need to evaluate the limit more quickly)
}
