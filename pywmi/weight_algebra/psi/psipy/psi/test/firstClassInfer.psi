
def Dirac[a](x:a):Distribution[a]{ // TODO: make built-in
	return infer(()=>x);
}

def main(){
	k := if flip(1/2) { infer } else { [a](f:𝟙 → a)=>Dirac(f()) };
	return k(()=>flip(1/2)); // expected: 1/2·δ(Λξ₁. 1/2·δ(val(0))[ξ₁]+1/2·δ(val(1))[ξ₁])[r]+1/4·δ(Λξ₁. δ(val(0))[ξ₁])[r]+1/4·δ(Λξ₁. δ(val(1))[ξ₁])[r]
}
