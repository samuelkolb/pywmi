dat Counter{
    x:ℝ;
    def Counter(){
        this.x = 0;
    }
    def foo(){
        this.x += 1;
        return ();
    }
}

def main(){
    c := Counter();
    for i in [0..10){
        if flip(1/2){ c.foo(); }
    }
    return c; // expected: 1/1024·δ({.x ↦ 0})[c]+1/1024·δ({.x ↦ 10})[c]+105/512·δ({.x ↦ 4})[c]+105/512·δ({.x ↦ 6})[c]+15/128·δ({.x ↦ 3})[c]+15/128·δ({.x ↦ 7})[c]+45/1024·δ({.x ↦ 2})[c]+45/1024·δ({.x ↦ 8})[c]+5/512·δ({.x ↦ 1})[c]+5/512·δ({.x ↦ 9})[c]+63/256·δ({.x ↦ 5})[c]
}
